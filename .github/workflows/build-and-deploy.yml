# from here: https://faun.pub/full-ci-cd-with-docker-github-actions-digitalocean-droplets-container-registry-db2938db8246

name: build-and-deploy

on:
  push:
    branches: [ main ]

env:
  REGISTRY: "your-digital-ocean-registry"
  FRONT_IMAGE_NAME: "chess_front_img"
  BACK_IMAGE_NAME: "chess_back_img"

jobs:
  build_and_push_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build front image
        run: docker build -t $(echo $REGISTRY)/$(echo $FRONT_IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) --target=prod ./front

      - name: Build back image
        run: docker build -t $(echo $REGISTRY)/$(echo $BACK_IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) --target=prod ./back

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old front images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $FRONT_IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $FRONT_IMAGE_NAME) $(doctl registry repository list-tags $(echo $FRONT_IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Remove all old back images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $BACK_IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $BACK_IMAGE_NAME) $(doctl registry repository list-tags $(echo $BACK_IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi
      
      - name: Push front image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $FRONT_IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
      
      - name: Push back image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $BACK_IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_HOST_IP }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          envs: FRONT_IMAGE_NAME,BACK_IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            
            ##
            ###
            #### @TODO use docker-compose.prod.yml with registry front and back images
            ###
            ##

            ##### Instead of following
            ####
            ###
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)