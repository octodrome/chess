name: build-and-deploy

on:
  push:
    branches: [ main ]

env:
  REGISTRY: "colinfaivre"
  FRONT_IMAGE_NAME: "chess_front_prod"
  BACK_IMAGE_NAME: "chess_back_prod"

jobs:
  build_and_push_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build front image
        run: docker build -t $(echo $REGISTRY)/$(echo $FRONT_IMAGE_NAME) --target=prod ./front

      - name: Build back image
        run: docker build -t $(echo $REGISTRY)/$(echo $BACK_IMAGE_NAME) --target=prod ./back

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
      - name: Push front image to Dockerhub Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $FRONT_IMAGE_NAME)
      
      - name: Push back image to Dockerhub Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $BACK_IMAGE_NAME)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_registry
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_HOST_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          envs: FRONT_IMAGE_NAME,BACK_IMAGE_NAME,REGISTRY,GITHUB_SHA
          script: |
            # Login to dockerhub registry
            echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            # Pull latest front and back prod images from dockerhub
            docker pull $(echo $REGISTRY)/$(echo $FRONT_IMAGE_NAME)
            docker pull $(echo $REGISTRY)/$(echo $BACK_IMAGE_NAME)
            cd chess_app
            # Stop the running docker compose
            docker compose -f docker-compose.prod.yml down
            # Run docker compose with the latest prod images
            docker compose -f docker-compose.prod.yml up --build --detach
            docker image prune -f